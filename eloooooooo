#include <iostream>
#include <cmath>

using namespace std;

const int MAX_SIZE = 100; // Maksymalny rozmiar tablicy

// Funkcja do generowania ciągu Fibonacciego do n-tego elementu
void generateFibonacci(int fib[], int n) {
    fib[0] = 0;
    fib[1] = 1;
    for (int i = 2; i <= n; ++i) {
        fib[i] = fib[i - 1] + fib[i - 2];
    }
}

// Funkcja do obliczania przybliżonej wartości złotej liczby (phi)
double calculateGoldenRatioApproximation(int fib[], int n) {
    if (n < 2)
        return 0;
    
    double phi;
    phi = static_cast<double>(fib[n]) / fib[n - 1];
    return phi;
}

int main() {
    int n;

    cout << "Podaj długość ciągu Fibonacciego: ";
    cin >> n;

    if (n < 1 || n > MAX_SIZE) {
        cout << "Nieprawidłowa długość ciągu. Podaj liczbę z zakresu od 1 do " << MAX_SIZE << "." << endl;
        return 1;
    }

    int fibonacci[MAX_SIZE];
    generateFibonacci(fibonacci, n);

    cout << "Ciąg Fibonacciego o długości " << n << ":\n";
    for (int i = 0; i < n; ++i) {
        cout << fibonacci[i] << " ";
    }

    cout << "\n\nPrzybliżona wartość złotej liczby (phi) dla elementu " << n << ": ";
    cout << calculateGoldenRatioApproximation(fibonacci, n) << endl;

    return 0;
}
